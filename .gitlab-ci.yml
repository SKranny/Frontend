image: node:16.13.1

services:
  - name: docker:dind
    alias: dockerdaemon
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

variables:
  DOCKER_HOST: tcp://dockerdaemon:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - deploy_docker
  - deploy_prod

build:
  stage: build
  only:
    - develop
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - dist

deploy_docker:
  image: docker:19.03.12
  stage: deploy_docker
  only:
    - develop
  before_script:
    - docker logout
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASS docker.io
  script:
    - docker build -f Dockerfile-ci -t $DOCKER_LOGIN/frontend:latest .
    - docker push $DOCKER_LOGIN/frontend:latest
  artifacts:
    paths:
      - dist

deploy_prod:
  image: ubuntu:latest
  stage: deploy
  only:
    - develop
  except:
    - tags
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "cherry" | tr -d '\r' | ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh deployer@$SERVER_IP "
      echo "$SERVER_PASS" | sudo -S docker login -u $DOCKER_LOGIN -p $DOCKER_PASS docker.io;
      echo "$SERVER_PASS" | sudo -S docker-compose stop frontend;
      echo "$SERVER_PASS" | sudo -S docker-compose pull frontend;
      echo "$SERVER_PASS" | sudo -S docker-compose up -d frontend"
